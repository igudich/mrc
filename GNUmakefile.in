# GNU makefile for mrc, the resource compiler

firstTarget: all

CXX					= @CXX@
CXXFLAGS			= @CXXFLAGS@ @CPPFLAGS@ @BOOST_CPPFLAGS@
LDFLAGS				= @LDFLAGS@ @BOOST_LDFLAGS@
LIBS				= @BOOST_PROGRAM_OPTIONS_LIB@ @LIBS@

prefix				= @prefix@
exec_prefix			= @exec_prefix@
libdir				= @libdir@
includedir			= @includedir@
bindir				= @bindir@

GNUmakefile: config.status GNUmakefile.in
	$(SHELL) ./config.status

config.status: configure
	$(SHELL) ./config.status --recheck

configure: configure.ac
	autoconf

# main build variables
CXXFLAGS            += -Wall -Wno-multichar

# Use the DEBUG flag to build debug versions of the code
DEBUG               = @DEBUG@

ifeq "$(DEBUG)" "1"
DEFINES				+= DEBUG
CXXFLAGS            += -g -O0
LDFLAGS				+= -g
else
CXXFLAGS			+= -O2
DEFINES				+= NDEBUG
endif

# targets

VPATH += src:test

CXXFLAGS			+= $(DEFINES:%=-D%)

OBJDIR = obj
ifeq "$(DEBUG)" "1"
	OBJDIR	:= $(OBJDIR).dbg
endif

SOURCES				= mrc.cpp mrc-unit-test.cpp

OBJECTS	= $(addprefix $(OBJDIR)/, $(notdir $(SOURCES:%.cpp=%.o)))

$(OBJDIR)/%.o: %.cpp | $(OBJDIR)
	@ echo ">>" $<
	@ $(CXX) -MD -c -o $@ $< $(CFLAGS) $(CXXFLAGS)

-include $(OBJECTS:%.o=%.d)

$(OBJECTS:.o=.d):

$(OBJDIR):
	@ test -d $@ || mkdir -p $@

.PHONY: clean all
clean:
	rm -rf $(OBJDIR)/* mrc mrc-unit-test

mrc-bootstrap: $(OBJDIR)/mrc.o $(OBJDIR)/dummy.o
	$(CXX) -o $@ $^ $(LDFLAGS) $(LIBS)

$(OBJDIR)/mrc_rsrc.o: mrc-bootstrap mrsrc.h
	./mrc-bootstrap -o $@ $^

mrc: $(OBJDIR)/mrc.o $(OBJDIR)/mrc_rsrc.o
	$(CXX) -o $@ $^ $(LDFLAGS) $(LIBS)

$(OBJDIR)/mrc-unit-test_rsrc.o: $(wildcard rsrc/*)
	./mrc -o $@ $^

mrc-unit-test: $(OBJDIR)/mrc-unit-test.o $(OBJDIR)/mrc-unit-test_rsrc.o
	$(CXX) -o $@ $^ $(LDFLAGS) $(LIBS)

.PHONY: test
test: mrc mrc-unit-test
	./mrc-unit-test

.PHONY: install
install:
	install mrc $(bindir)

all: mrc

